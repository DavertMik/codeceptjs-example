{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 0,
    "pending": 8,
    "failures": 1,
    "start": "2021-07-19T20:56:01.714Z",
    "end": "2021-07-19T20:56:06.213Z",
    "duration": 4499,
    "testsRegistered": 15,
    "passPercent": 0,
    "pendingPercent": 53.333333333333336,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "1b635a7e-213b-4f2e-9496-4685972cca63",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
          "title": "@first Create Todos @step:06 @smoke @story:12345",
          "fullFile": "/home/davert/projects/testomatio/examples/codeceptJS/todomvc-tests/create-todos_test.js",
          "file": "/todomvc-tests/create-todos_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345 \"before all\" hook: codeceptjs.beforeSuite in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "timedOut": false,
              "duration": 123,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "13c065a2-8a30-4de0-b145-693dc7b95e5d",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345 \"before each\" hook: codeceptjs.before in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "timedOut": false,
              "duration": 236,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "2ad653d5-f450-4b07-ac04-65277829febb",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345 \"before each\" hook: Before in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "timedOut": false,
              "duration": 3498,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  TodosPage.goto()",
              "err": {},
              "uuid": "0083dbce-ac5c-4e22-829d-cc28c18703c6",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345 \"after all\" hook: codeceptjs.afterSuite in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "d0c418c3-63f2-451f-8560-da9ef2a931f1",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345 \"after each\" hook: finalize codeceptjs in \"@first Create Todos @step:06 @smoke @story:12345\"",
              "timedOut": false,
              "duration": 38,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "6df5ca10-294e-4b28-ab3b-32ba0468ac12",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create a new todo item",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Create a new todo item",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('Given I have an empty todo list')\n  I.say('When I create a todo \"foo\"')\n  TodosPage.enterTodo('foo')\n  I.say('Then I see the new todo on my list')\n  TodosPage.seeNumberOfTodos(1)\n  I.saveScreenshot('create-todo-item.png')",
              "err": {},
              "uuid": "84e784a8-704e-4228-89fa-45036dc60abb",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Create multiple todo items",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Create multiple todo items",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('Given I have an empty todo list')\n  I.say('When I create todos \"foo\", \"bar\" and \"baz\"')\n  TodosPage.enterTodo('foo')\n  TodosPage.enterTodo('bar')\n  TodosPage.enterTodo('baz')\n  I.say('Then I have these 3 todos on my list')\n  TodosPage.seeNumberOfTodos(3)\n  I.saveScreenshot('create-multiple-todo-items.png')",
              "err": {},
              "uuid": "c3f06c16-41ec-425a-a0d7-3433157eda3f",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Todos containing weird characters | {\"Todo Text\":\"Todo with umlauts äöü\",\"Result\":\"is in list\"}",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Todos containing weird characters | {\"Todo Text\":\"Todo with umlauts äöü\",\"Result\":\"is in list\"}",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, current, TodosPage }) => {\n  I.say('When I enter {Todo Text}')\n  TodosPage.enterTodo(current['Todo Text'])\n  I.say('Then I see {Result}')\n  if (current['Result'] === 'is in list') {\n    TodosPage.seeNthTodoEquals(1, current['Todo Text'])\n  }",
              "err": {},
              "uuid": "a3aa6c27-775e-459f-9774-160bc7cdbd1a",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Todos containing weird characters | {\"Todo Text\":\"Very loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong TooooooooooooooooooooooooooooooooooooooooDooooooooooooooo\",\"Result\":\"is in list\"}",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Todos containing weird characters | {\"Todo Text\":\"Very loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong TooooooooooooooooooooooooooooooooooooooooDooooooooooooooo\",\"Result\":\"is in list\"}",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, current, TodosPage }) => {\n  I.say('When I enter {Todo Text}')\n  TodosPage.enterTodo(current['Todo Text'])\n  I.say('Then I see {Result}')\n  if (current['Result'] === 'is in list') {\n    TodosPage.seeNthTodoEquals(1, current['Todo Text'])\n  }",
              "err": {},
              "uuid": "19045867-e97e-4b92-906f-a66fbcf9e64c",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Todos containing weird characters | {\"Todo Text\":\"Todo with html code <script>alert(\\\"hello\\\")</script>\",\"Result\":\"is in list\"}",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Todos containing weird characters | {\"Todo Text\":\"Todo with html code <script>alert(\\\"hello\\\")</script>\",\"Result\":\"is in list\"}",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, current, TodosPage }) => {\n  I.say('When I enter {Todo Text}')\n  TodosPage.enterTodo(current['Todo Text'])\n  I.say('Then I see {Result}')\n  if (current['Result'] === 'is in list') {\n    TodosPage.seeNthTodoEquals(1, current['Todo Text'])\n  }",
              "err": {},
              "uuid": "fc6c71bb-ed31-4b62-a307-9e35b4f683d4",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Text input field should be cleared after each item",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Text input field should be cleared after each item",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('Given I have an empty todo list')\n  I.say('When I enter a new todo')\n  TodosPage.enterTodo('foo')\n  I.say('Then I see that the input field has been cleared')\n  TodosPage.seeEmptyTodoInput()",
              "err": {},
              "uuid": "c90c2b3c-1c10-4a01-a1e8-7600e85da1cf",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Text input should be trimmed",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Text input should be trimmed",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('Given I have an empty todo list')\n  I.say('When I enter a todo with whitespace around the text')\n  TodosPage.enterTodo('       Todo with lots of whitespace around       ')\n  I.say('Then I see the trimmed text of the todo in the list')\n  await TodosPage.seeNthTodoEquals(1, 'Todo with lots of whitespace around')",
              "err": {},
              "uuid": "b3e3a41a-47bb-4db5-91c9-3bb9d3ccf717",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "New todos should be added to the bottom of the list",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: New todos should be added to the bottom of the list",
              "timedOut": false,
              "duration": 588,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('Given I added some todos')\n  TodosPage.enterTodo('first')\n  TodosPage.enterTodo('second')\n  TodosPage.enterTodo('last')\n  I.say('When I look at my todo list')\n  I.say('Then I see the todos in the order in which I added them')\n  await TodosPage.seeNthTodoEquals(1, 'first')\n  await TodosPage.seeNthTodoEquals(2, 'second')\n  await TodosPage.seeNthTodoEquals(3, 'last')",
              "err": {
                "message": "AssertionError: Expected \"second\" but got \"undefined\"",
                "estack": "AssertionError [ERR_ASSERTION]: Expected \"second\" but got \"undefined\"\n    at Object.seeNthTodoEquals (todomvc-tests/pages/todos.page.js:89:9)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async Test.<anonymous> (todomvc-tests/create-todos_test.js:83:3)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "a274cfda-fc85-4bae-a69b-4f25fc4c8acc",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Footer should be visible when adding TODOs",
              "fullTitle": "@first Create Todos @step:06 @smoke @story:12345: Footer should be visible when adding TODOs",
              "timedOut": false,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('Given I am adding todos')\n  TodosPage.seeFooter()\n  I.say('When I add a todo')\n  TodosPage.enterTodo('first')\n  I.say('Then I always see the footer')\n  TodosPage.seeFooter()",
              "err": {},
              "uuid": "ee68f485-57b6-42f5-9251-a783c4615261",
              "parentUUID": "14658bf7-04b1-4d82-a660-7aa08ecb49aa",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a274cfda-fc85-4bae-a69b-4f25fc4c8acc"
          ],
          "pending": [],
          "skipped": [
            "84e784a8-704e-4228-89fa-45036dc60abb",
            "c3f06c16-41ec-425a-a0d7-3433157eda3f",
            "a3aa6c27-775e-459f-9774-160bc7cdbd1a",
            "19045867-e97e-4b92-906f-a66fbcf9e64c",
            "fc6c71bb-ed31-4b62-a307-9e35b4f683d4",
            "c90c2b3c-1c10-4a01-a1e8-7600e85da1cf",
            "b3e3a41a-47bb-4db5-91c9-3bb9d3ccf717",
            "ee68f485-57b6-42f5-9251-a783c4615261"
          ],
          "duration": 588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8b4eec72-3126-42d4-9525-264f7dc536f6",
          "title": "Edit/Delete Todos @step-06",
          "fullFile": "/home/davert/projects/testomatio/examples/codeceptJS/todomvc-tests/edit-todos_test.js",
          "file": "/todomvc-tests/edit-todos_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Edit/Delete Todos @step-06 \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "ec8dcfef-212a-4e55-9017-e1c9cc4424cb",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Edit/Delete Todos @step-06 \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "92fcbe16-e55f-49f3-96d3-349e45c3a35b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Edit/Delete Todos @step-06 \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nif (!recorder.isRunning()) {\n  recorder.start();\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nthis.test.body = fn.toString();\nif (isAsyncFunction(fn)) {\n  fn.call(this, getInjectedArguments(fn)).then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });\n  return;\n}\ntry {\n  fn.call(this, getInjectedArguments(fn));\n  recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n  recorder.add(`finish ${hookName} hook`, () => done());\n  recorder.catch();\n} catch (err) {\n  recorder.throw(err);\n  recorder.catch((e) => {\n    const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n    errHandler(err);\n  });\n  recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, err));\n}",
              "err": {},
              "uuid": "ebfa3b42-b88e-409d-8289-da9391b1892b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Edit/Delete Todos @step-06 \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "6971a669-8018-417d-8dbc-f26c42a324e9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Edit/Delete Todos @step-06 \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "dbb7e96b-5b78-4505-8a66-39c02415c0b3",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "569102e4-0c12-4dee-9e12-cac569e1e887",
          "title": "Mark as completed/not completed @step-06",
          "fullFile": "/home/davert/projects/testomatio/examples/codeceptJS/todomvc-tests/mark-as-completed_test.js",
          "file": "/todomvc-tests/mark-as-completed_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Mark as completed/not completed @step-06 \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "cbefbd66-557d-460e-b25e-b928781b101d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Mark as completed/not completed @step-06 \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "25ad3de9-9c0f-4d18-8b74-e92e0889b3c1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Mark as completed/not completed @step-06 \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nif (!recorder.isRunning()) {\n  recorder.start();\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nthis.test.body = fn.toString();\nif (isAsyncFunction(fn)) {\n  fn.call(this, getInjectedArguments(fn)).then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });\n  return;\n}\ntry {\n  fn.call(this, getInjectedArguments(fn));\n  recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n  recorder.add(`finish ${hookName} hook`, () => done());\n  recorder.catch();\n} catch (err) {\n  recorder.throw(err);\n  recorder.catch((e) => {\n    const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n    errHandler(err);\n  });\n  recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, err));\n}",
              "err": {},
              "uuid": "436966b3-819c-45f4-9da1-9b9a65b6a4f6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Mark as completed/not completed @step-06 \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "57494e10-56fd-47b7-9020-4a4b54e7330e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Mark as completed/not completed @step-06 \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "05670702-f6ea-4b01-a6c1-f3c225f48556",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Mark todos as completed",
              "fullTitle": "Mark as completed/not completed @step-06: Mark todos as completed",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('Given I have some todos')\n  I.say('When I mark the first one as completed')\n  await TodosPage.markNthAsCompleted(1)\n  I.say('Then I see that 2 todos are still active')\n  TodosPage.filterActive()\n  TodosPage.seeNumberOfTodos(2)\n  I.say('And I see that 1 has been completed')\n  TodosPage.filterCompleted()\n  TodosPage.seeNumberOfTodos(1)\n  I.saveScreenshot('mark-todos-as-completed.png')",
              "err": {},
              "uuid": "5447d887-6297-486e-99c5-0a25ed35f89f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Unmark completed todos",
              "fullTitle": "Mark as completed/not completed @step-06: Unmark completed todos",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n    I.say('Given I have some todos')\n  \n    I.say('And I mark the first one as completed')\n    await TodosPage.markNthAsCompleted(1)\n    await TodosPage.unmarkNthAsCompleted(1)\n  \n    I.say('When I unmark the completed todo item')\n    I.say('Then I see that 3 todos are still active')\n    TodosPage.filterActive()\n    TodosPage.seeNumberOfTodos(3)\n  \n    I.saveScreenshot('unmark-todos-as-completed.png')",
              "err": {},
              "uuid": "c2adf6b7-6b75-477a-b4e5-0f0fcb874bd6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Mark all todos as completed",
              "fullTitle": "Mark as completed/not completed @step-06: Mark all todos as completed",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n    I.say('Given I have some todos')\n  \n    I.say('When I mark them all as completed')\n    TodosPage.markAllAsCompleted()\n  \n    I.say('Then I see that all 3 are completed')\n    TodosPage.filterCompleted()\n    TodosPage.seeNumberOfTodos(3)\n  \n    I.saveScreenshot('mark-all-todos-as-completed.png')",
              "err": {},
              "uuid": "3dabc8f7-bb11-4ccd-804f-ca1f372b7a10",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Clear completed todos",
              "fullTitle": "Mark as completed/not completed @step-06: Clear completed todos",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n    I.say('Given I have some completed todos') \n    TodosPage.markAllAsCompleted()\n  \n    I.say('When I clear all completed items')\n    TodosPage.clearCompleted()\n    TodosPage.seeNumberOfTodos(0)\n  \n    I.saveScreenshot('clear-completed-todos.png')",
              "err": {},
              "uuid": "325cdc0f-8346-4a65-8de8-99a51ab5a674",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "5447d887-6297-486e-99c5-0a25ed35f89f",
            "c2adf6b7-6b75-477a-b4e5-0f0fcb874bd6",
            "3dabc8f7-bb11-4ccd-804f-ca1f372b7a10",
            "325cdc0f-8346-4a65-8de8-99a51ab5a674"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d5efeb88-ed9c-41aa-8dd8-8b1bd5a0a0e1",
          "title": "Persist Todos",
          "fullFile": "/home/davert/projects/testomatio/examples/codeceptJS/todomvc-tests/persist-todos_test.js",
          "file": "/todomvc-tests/persist-todos_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Persist Todos \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "45c368ec-c909-4d8c-8a11-545c9f7cd045",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Persist Todos \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "88364fa5-9085-4c93-8354-e669f69068ad",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Persist Todos \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nif (!recorder.isRunning()) {\n  recorder.start();\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nthis.test.body = fn.toString();\nif (isAsyncFunction(fn)) {\n  fn.call(this, getInjectedArguments(fn)).then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });\n  return;\n}\ntry {\n  fn.call(this, getInjectedArguments(fn));\n  recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n  recorder.add(`finish ${hookName} hook`, () => done());\n  recorder.catch();\n} catch (err) {\n  recorder.throw(err);\n  recorder.catch((e) => {\n    const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n    errHandler(err);\n  });\n  recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, err));\n}",
              "err": {},
              "uuid": "6362667b-cb10-44b6-b4e1-82c38fc1d445",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Persist Todos \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "148ad4d8-725b-4855-bb36-75d3dc458fc9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Persist Todos \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "01be6e33-31a9-4e5b-aa64-bd4d8b32aa79",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Todos survive a page refresh @step-06",
              "fullTitle": "Persist Todos: Todos survive a page refresh @step-06",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, TodosPage }) => {\n  I.say('And I marked the first as completed')\n  await TodosPage.markNthAsCompleted(1)\n  I.say('When I refresh the page')\n  TodosPage.refresh()\n  I.say('Then I still see the same todos')\n  TodosPage.seeNumberOfTodos(4)\n  await TodosPage.seeNthTodoEquals(1, 'foo')\n  I.saveScreenshot('todos-survive-page-refresh.png')",
              "err": {},
              "uuid": "6363e355-c215-4586-ae9c-dac954c815f9",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6363e355-c215-4586-ae9c-dac954c815f9"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "7eb45bc0-3765-468f-a23a-bc8624ab2d61",
          "title": "codepress demo",
          "fullFile": "/home/davert/projects/testomatio/examples/codeceptJS/todomvc-tests/todo-mvc_test.js",
          "file": "/todomvc-tests/todo-mvc_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "codepress demo \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "212b8e87-68f7-4b4a-82dc-9a2c9e0c9149",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "codepress demo \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "707662f6-ee87-4c01-b25a-f5c6823eae54",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "codepress demo \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nif (!recorder.isRunning()) {\n  recorder.start();\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nthis.test.body = fn.toString();\nif (isAsyncFunction(fn)) {\n  fn.call(this, getInjectedArguments(fn)).then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });\n  return;\n}\ntry {\n  fn.call(this, getInjectedArguments(fn));\n  recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n  recorder.add(`finish ${hookName} hook`, () => done());\n  recorder.catch();\n} catch (err) {\n  recorder.throw(err);\n  recorder.catch((e) => {\n    const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n    errHandler(err);\n  });\n  recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, err));\n}",
              "err": {},
              "uuid": "43a3509f-3343-4616-9e56-d062133080d1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "codepress demo \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a40c6a3e-1c37-41bc-a5b5-84e490e1e7bd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "codepress demo \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "10845003-355b-45f0-904e-821de17a5f22",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create some todo items @smoke",
              "fullTitle": "codepress demo: Create some todo items @smoke",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I }) => {\n  I.say('When I focus the todo field')\n  I.click('.new-todo')\n  I.say('Then I can add additional todos')\n  I.fillField({ css: '.new-todo'}, 'Optimize Puppeteer support')\n  I.pressKey('Enter')\n  I.fillField({ css: '.new-todo'}, 'Add a web REPL')\n  I.pressKey('Enter')\n  I.fillField(locate('.new-todo').as('TODO Input'), 'Support Appium')\n  I.pressKey('Enter')\n  I.fillField({ css: '.new-todo'}, 'Become REALLY productive writing E2E Tests with codepress and CodeceptJS')\n  I.pressKey('Enter')\n  I.say('And I see them in the list')\n  I.seeNumberOfVisibleElements('.todo-list li', 6)\n  I.see('Create a cypress like runner', { css: 'li:nth-child(1) label'})\n  I.dontSee('Nightmare', '.main')\n  I.say('I complete a todo')\n  I.click({ css: 'li:nth-child(1) .toggle'})\n  I.seeElement('li:nth-child(1).completed')\n  I.say('I mark all as completed')\n  I.click('.main > label')\n  I.seeNumberOfVisibleElements('.todo-list li.completed', 6)\n  I.saveScreenshot('create-multiple-todo-items.png')",
              "err": {},
              "uuid": "c6b43ed1-83c9-4648-9bf0-0c6523a32195",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "c6b43ed1-83c9-4648-9bf0-0c6523a32195"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome111",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "output",
        "reportFilename": "mochawesome111",
        "inline": true
      },
      "version": "5.2.0"
    }
  }
}